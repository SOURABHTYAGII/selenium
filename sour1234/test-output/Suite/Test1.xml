<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="SOURABH" failures="0" tests="4" name="Test1" time="0.037" errors="0" timestamp="2022-12-14T12:29:50 IST">
  <testcase classname="sour1234.NewTestparllel" name="@BeforeTest beforeTest" time="-1.671001190882E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest&amp;gt; into a @BeforeTest annotated beforeTest.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeTest annotated beforeTest.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 12 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="sour1234.NewTestparllel" name="@AfterTest afterTest" time="-1.671001190913E9">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="sour1234.NewTestparllel" name="f" time="0.0">
    <skipped/>
  </testcase> <!-- f -->
  <testcase classname="sour1234.NewTestparllel" name="f" time="0.0">
    <skipped/>
  </testcase> <!-- f -->
  <testcase classname="sour1234.NewTestparllel" name="orangehrm" time="0.0">
    <skipped/>
  </testcase> <!-- orangehrm -->
  <testcase classname="sour1234.NewTestparllel" name="orangehrm" time="0.0">
    <skipped/>
  </testcase> <!-- orangehrm -->
</testsuite> <!-- Test1 -->
