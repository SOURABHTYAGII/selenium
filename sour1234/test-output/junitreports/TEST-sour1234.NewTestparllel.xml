<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="SOURABH" failures="0" tests="6" name="sour1234.NewTestparllel" time="-3342002176.000" errors="2" timestamp="2022-12-14T12:29:51 IST" skipped="4">
  <testcase classname="sour1234.NewTestparllel" name="f" time="0.000">
    <skipped/>
  </testcase> <!-- f -->
  <system-out/>
  <testcase classname="sour1234.NewTestparllel" name="beforeTest" time="-1671001088.000">
    <error message="
Can inject only one of &lt;ITestContext, XmlTest&gt; into a @BeforeTest annotated beforeTest.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection" type="org.testng.TestNGException">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeTest annotated beforeTest.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:619)
at org.testng.TestRunner.beforeRun(TestRunner.java:609)
at org.testng.TestRunner.run(TestRunner.java:580)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </error>
  </testcase> <!-- beforeTest -->
  <system-out/>
  <testcase classname="sour1234.NewTestparllel" name="f" time="0.000">
    <skipped/>
  </testcase> <!-- f -->
  <system-out/>
  <testcase classname="sour1234.NewTestparllel" name="beforeTest" time="-1671001088.000">
    <error message="
Can inject only one of &lt;ITestContext, XmlTest&gt; into a @BeforeTest annotated beforeTest.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection" type="org.testng.TestNGException">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest> into a @BeforeTest annotated beforeTest.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:441)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:712)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:283)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:619)
at org.testng.TestRunner.beforeRun(TestRunner.java:609)
at org.testng.TestRunner.run(TestRunner.java:580)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </error>
  </testcase> <!-- beforeTest -->
  <system-out/>
  <testcase classname="sour1234.NewTestparllel" name="orangehrm" time="0.000">
    <skipped/>
  </testcase> <!-- orangehrm -->
  <system-out/>
  <testcase classname="sour1234.NewTestparllel" name="orangehrm" time="0.000">
    <skipped/>
  </testcase> <!-- orangehrm -->
  <system-out/>
</testsuite> <!-- sour1234.NewTestparllel -->
